<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.logistics.dao.SorPackagedetailsMapper" >
  <resultMap id="BaseResultMap" type="com.example.logistics.model.SorPackagedetails" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="WareName" property="warename" jdbcType="INTEGER" />
    <result column="Destination" property="destination" jdbcType="VARCHAR" />
    <result column="Ticket" property="ticket" jdbcType="INTEGER" />
    <result column="ActualCargoInt" property="actualcargoint" jdbcType="INTEGER" />
    <result column="CargoInt" property="cargoint" jdbcType="INTEGER" />
    <result column="Weight" property="weight" jdbcType="DECIMAL" />
    <result column="Volume" property="volume" jdbcType="DECIMAL" />
    <result column="Service" property="service" jdbcType="TIMESTAMP" />
    <result column="ImportantHints" property="importanthints" jdbcType="VARCHAR" />
    <result column="Ask" property="ask" jdbcType="VARCHAR" />
    <result column="InputType" property="inputtype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, WareName, Destination, Ticket, ActualCargoInt, CargoInt, Weight, Volume, Service, 
    ImportantHints, Ask, InputType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.logistics.model.SorPackagedetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sor_packagedetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sor_packagedetails
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sor_packagedetails
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.logistics.model.SorPackagedetailsExample" >
    delete from sor_packagedetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.logistics.model.SorPackagedetails" >
    insert into sor_packagedetails (ID, WareName, Destination, 
      Ticket, ActualCargoInt, CargoInt, 
      Weight, Volume, Service, 
      ImportantHints, Ask, InputType
      )
    values (#{id,jdbcType=INTEGER}, #{warename,jdbcType=INTEGER}, #{destination,jdbcType=VARCHAR}, 
      #{ticket,jdbcType=INTEGER}, #{actualcargoint,jdbcType=INTEGER}, #{cargoint,jdbcType=INTEGER}, 
      #{weight,jdbcType=DECIMAL}, #{volume,jdbcType=DECIMAL}, #{service,jdbcType=TIMESTAMP}, 
      #{importanthints,jdbcType=VARCHAR}, #{ask,jdbcType=VARCHAR}, #{inputtype,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.logistics.model.SorPackagedetails" >
    insert into sor_packagedetails
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="warename != null" >
        WareName,
      </if>
      <if test="destination != null" >
        Destination,
      </if>
      <if test="ticket != null" >
        Ticket,
      </if>
      <if test="actualcargoint != null" >
        ActualCargoInt,
      </if>
      <if test="cargoint != null" >
        CargoInt,
      </if>
      <if test="weight != null" >
        Weight,
      </if>
      <if test="volume != null" >
        Volume,
      </if>
      <if test="service != null" >
        Service,
      </if>
      <if test="importanthints != null" >
        ImportantHints,
      </if>
      <if test="ask != null" >
        Ask,
      </if>
      <if test="inputtype != null" >
        InputType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="warename != null" >
        #{warename,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null" >
        #{ticket,jdbcType=INTEGER},
      </if>
      <if test="actualcargoint != null" >
        #{actualcargoint,jdbcType=INTEGER},
      </if>
      <if test="cargoint != null" >
        #{cargoint,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=DECIMAL},
      </if>
      <if test="service != null" >
        #{service,jdbcType=TIMESTAMP},
      </if>
      <if test="importanthints != null" >
        #{importanthints,jdbcType=VARCHAR},
      </if>
      <if test="ask != null" >
        #{ask,jdbcType=VARCHAR},
      </if>
      <if test="inputtype != null" >
        #{inputtype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.logistics.model.SorPackagedetailsExample" resultType="java.lang.Integer" >
    select count(*) from sor_packagedetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sor_packagedetails
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.warename != null" >
        WareName = #{record.warename,jdbcType=INTEGER},
      </if>
      <if test="record.destination != null" >
        Destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.ticket != null" >
        Ticket = #{record.ticket,jdbcType=INTEGER},
      </if>
      <if test="record.actualcargoint != null" >
        ActualCargoInt = #{record.actualcargoint,jdbcType=INTEGER},
      </if>
      <if test="record.cargoint != null" >
        CargoInt = #{record.cargoint,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        Weight = #{record.weight,jdbcType=DECIMAL},
      </if>
      <if test="record.volume != null" >
        Volume = #{record.volume,jdbcType=DECIMAL},
      </if>
      <if test="record.service != null" >
        Service = #{record.service,jdbcType=TIMESTAMP},
      </if>
      <if test="record.importanthints != null" >
        ImportantHints = #{record.importanthints,jdbcType=VARCHAR},
      </if>
      <if test="record.ask != null" >
        Ask = #{record.ask,jdbcType=VARCHAR},
      </if>
      <if test="record.inputtype != null" >
        InputType = #{record.inputtype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sor_packagedetails
    set ID = #{record.id,jdbcType=INTEGER},
      WareName = #{record.warename,jdbcType=INTEGER},
      Destination = #{record.destination,jdbcType=VARCHAR},
      Ticket = #{record.ticket,jdbcType=INTEGER},
      ActualCargoInt = #{record.actualcargoint,jdbcType=INTEGER},
      CargoInt = #{record.cargoint,jdbcType=INTEGER},
      Weight = #{record.weight,jdbcType=DECIMAL},
      Volume = #{record.volume,jdbcType=DECIMAL},
      Service = #{record.service,jdbcType=TIMESTAMP},
      ImportantHints = #{record.importanthints,jdbcType=VARCHAR},
      Ask = #{record.ask,jdbcType=VARCHAR},
      InputType = #{record.inputtype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.logistics.model.SorPackagedetails" >
    update sor_packagedetails
    <set >
      <if test="warename != null" >
        WareName = #{warename,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        Destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null" >
        Ticket = #{ticket,jdbcType=INTEGER},
      </if>
      <if test="actualcargoint != null" >
        ActualCargoInt = #{actualcargoint,jdbcType=INTEGER},
      </if>
      <if test="cargoint != null" >
        CargoInt = #{cargoint,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        Weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        Volume = #{volume,jdbcType=DECIMAL},
      </if>
      <if test="service != null" >
        Service = #{service,jdbcType=TIMESTAMP},
      </if>
      <if test="importanthints != null" >
        ImportantHints = #{importanthints,jdbcType=VARCHAR},
      </if>
      <if test="ask != null" >
        Ask = #{ask,jdbcType=VARCHAR},
      </if>
      <if test="inputtype != null" >
        InputType = #{inputtype,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.logistics.model.SorPackagedetails" >
    update sor_packagedetails
    set WareName = #{warename,jdbcType=INTEGER},
      Destination = #{destination,jdbcType=VARCHAR},
      Ticket = #{ticket,jdbcType=INTEGER},
      ActualCargoInt = #{actualcargoint,jdbcType=INTEGER},
      CargoInt = #{cargoint,jdbcType=INTEGER},
      Weight = #{weight,jdbcType=DECIMAL},
      Volume = #{volume,jdbcType=DECIMAL},
      Service = #{service,jdbcType=TIMESTAMP},
      ImportantHints = #{importanthints,jdbcType=VARCHAR},
      Ask = #{ask,jdbcType=VARCHAR},
      InputType = #{inputtype,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>