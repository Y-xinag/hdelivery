<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.logistics.dao.PacStockitemMapper" >
  <resultMap id="BaseResultMap" type="com.example.logistics.model.PacStockitem" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <id column="WarehouseNo" property="warehouseno" jdbcType="VARCHAR" />
    <id column="GoodsCode" property="goodscode" jdbcType="VARCHAR" />
    <id column="ActualNum" property="actualnum" jdbcType="INTEGER" />
    <result column="GoodsName" property="goodsname" jdbcType="VARCHAR" />
    <result column="StorageNum" property="storagenum" jdbcType="INTEGER" />
    <result column="PlannedPrice" property="plannedprice" jdbcType="DECIMAL" />
    <result column="Specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="Status" property="status" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, WarehouseNo, GoodsCode, ActualNum, GoodsName, StorageNum, PlannedPrice, Specifications, 
    type, Status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.logistics.model.PacStockitemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pac_stockitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.logistics.model.PacStockitemKey" >
    select 
    <include refid="Base_Column_List" />
    from pac_stockitem
    where ID = #{id,jdbcType=INTEGER}
      and WarehouseNo = #{warehouseno,jdbcType=VARCHAR}
      and GoodsCode = #{goodscode,jdbcType=VARCHAR}
      and ActualNum = #{actualnum,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.logistics.model.PacStockitemKey" >
    delete from pac_stockitem
    where ID = #{id,jdbcType=INTEGER}
      and WarehouseNo = #{warehouseno,jdbcType=VARCHAR}
      and GoodsCode = #{goodscode,jdbcType=VARCHAR}
      and ActualNum = #{actualnum,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.logistics.model.PacStockitemExample" >
    delete from pac_stockitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.logistics.model.PacStockitem" >
    insert into pac_stockitem (ID, WarehouseNo, GoodsCode, 
      ActualNum, GoodsName, StorageNum, 
      PlannedPrice, Specifications, type, 
      Status)
    values (#{id,jdbcType=INTEGER}, #{warehouseno,jdbcType=VARCHAR}, #{goodscode,jdbcType=VARCHAR}, 
      #{actualnum,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{storagenum,jdbcType=INTEGER}, 
      #{plannedprice,jdbcType=DECIMAL}, #{specifications,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, 
      #{status,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.logistics.model.PacStockitem" >
    insert into pac_stockitem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="warehouseno != null" >
        WarehouseNo,
      </if>
      <if test="goodscode != null" >
        GoodsCode,
      </if>
      <if test="actualnum != null" >
        ActualNum,
      </if>
      <if test="goodsname != null" >
        GoodsName,
      </if>
      <if test="storagenum != null" >
        StorageNum,
      </if>
      <if test="plannedprice != null" >
        PlannedPrice,
      </if>
      <if test="specifications != null" >
        Specifications,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="warehouseno != null" >
        #{warehouseno,jdbcType=VARCHAR},
      </if>
      <if test="goodscode != null" >
        #{goodscode,jdbcType=VARCHAR},
      </if>
      <if test="actualnum != null" >
        #{actualnum,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null" >
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="storagenum != null" >
        #{storagenum,jdbcType=INTEGER},
      </if>
      <if test="plannedprice != null" >
        #{plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.logistics.model.PacStockitemExample" resultType="java.lang.Integer" >
    select count(*) from pac_stockitem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pac_stockitem
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.warehouseno != null" >
        WarehouseNo = #{record.warehouseno,jdbcType=VARCHAR},
      </if>
      <if test="record.goodscode != null" >
        GoodsCode = #{record.goodscode,jdbcType=VARCHAR},
      </if>
      <if test="record.actualnum != null" >
        ActualNum = #{record.actualnum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null" >
        GoodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.storagenum != null" >
        StorageNum = #{record.storagenum,jdbcType=INTEGER},
      </if>
      <if test="record.plannedprice != null" >
        PlannedPrice = #{record.plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="record.specifications != null" >
        Specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pac_stockitem
    set ID = #{record.id,jdbcType=INTEGER},
      WarehouseNo = #{record.warehouseno,jdbcType=VARCHAR},
      GoodsCode = #{record.goodscode,jdbcType=VARCHAR},
      ActualNum = #{record.actualnum,jdbcType=INTEGER},
      GoodsName = #{record.goodsname,jdbcType=VARCHAR},
      StorageNum = #{record.storagenum,jdbcType=INTEGER},
      PlannedPrice = #{record.plannedprice,jdbcType=DECIMAL},
      Specifications = #{record.specifications,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=BIT},
      Status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.logistics.model.PacStockitem" >
    update pac_stockitem
    <set >
      <if test="goodsname != null" >
        GoodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="storagenum != null" >
        StorageNum = #{storagenum,jdbcType=INTEGER},
      </if>
      <if test="plannedprice != null" >
        PlannedPrice = #{plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="specifications != null" >
        Specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=BIT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
      and WarehouseNo = #{warehouseno,jdbcType=VARCHAR}
      and GoodsCode = #{goodscode,jdbcType=VARCHAR}
      and ActualNum = #{actualnum,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.logistics.model.PacStockitem" >
    update pac_stockitem
    set GoodsName = #{goodsname,jdbcType=VARCHAR},
      StorageNum = #{storagenum,jdbcType=INTEGER},
      PlannedPrice = #{plannedprice,jdbcType=DECIMAL},
      Specifications = #{specifications,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      Status = #{status,jdbcType=BIT}
    where ID = #{id,jdbcType=INTEGER}
      and WarehouseNo = #{warehouseno,jdbcType=VARCHAR}
      and GoodsCode = #{goodscode,jdbcType=VARCHAR}
      and ActualNum = #{actualnum,jdbcType=INTEGER}
  </update>
</mapper>