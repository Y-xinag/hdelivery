<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.logistics.dao.PacPackagingMapper" >
  <resultMap id="BaseResultMap" type="com.example.logistics.model.PacPackaging" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ItemCode" property="itemcode" jdbcType="VARCHAR" />
    <result column="ItemName" property="itemname" jdbcType="VARCHAR" />
    <result column="PlannedPrice" property="plannedprice" jdbcType="DECIMAL" />
    <result column="Specifications" property="specifications" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="MeasurementUnit" property="measurementunit" jdbcType="VARCHAR" />
    <result column="Status" property="status" jdbcType="BIT" />
    <result column="OperatorID" property="operatorid" jdbcType="INTEGER" />
    <result column="OperationUnitID" property="operationunitid" jdbcType="INTEGER" />
    <result column="OperationTime" property="operationtime" jdbcType="TIMESTAMP" />
    <result column="InvalidateJobInt" property="invalidatejobint" jdbcType="INTEGER" />
    <result column="InvalidateName" property="invalidatename" jdbcType="INTEGER" />
    <result column="InvalidateTime" property="invalidatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, ItemCode, ItemName, PlannedPrice, Specifications, type, MeasurementUnit, Status, 
    OperatorID, OperationUnitID, OperationTime, InvalidateJobInt, InvalidateName, InvalidateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.logistics.model.PacPackagingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pac_packaging
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pac_packaging
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pac_packaging
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.logistics.model.PacPackagingExample" >
    delete from pac_packaging
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.logistics.model.PacPackaging" >
    insert into pac_packaging (ID, ItemCode, ItemName, 
      PlannedPrice, Specifications, type, 
      MeasurementUnit, Status, OperatorID, 
      OperationUnitID, OperationTime, InvalidateJobInt, 
      InvalidateName, InvalidateTime)
    values (#{id,jdbcType=INTEGER}, #{itemcode,jdbcType=VARCHAR}, #{itemname,jdbcType=VARCHAR}, 
      #{plannedprice,jdbcType=DECIMAL}, #{specifications,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, 
      #{measurementunit,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{operatorid,jdbcType=INTEGER}, 
      #{operationunitid,jdbcType=INTEGER}, #{operationtime,jdbcType=TIMESTAMP}, #{invalidatejobint,jdbcType=INTEGER}, 
      #{invalidatename,jdbcType=INTEGER}, #{invalidatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.logistics.model.PacPackaging" >
    insert into pac_packaging
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="itemcode != null" >
        ItemCode,
      </if>
      <if test="itemname != null" >
        ItemName,
      </if>
      <if test="plannedprice != null" >
        PlannedPrice,
      </if>
      <if test="specifications != null" >
        Specifications,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="measurementunit != null" >
        MeasurementUnit,
      </if>
      <if test="status != null" >
        Status,
      </if>
      <if test="operatorid != null" >
        OperatorID,
      </if>
      <if test="operationunitid != null" >
        OperationUnitID,
      </if>
      <if test="operationtime != null" >
        OperationTime,
      </if>
      <if test="invalidatejobint != null" >
        InvalidateJobInt,
      </if>
      <if test="invalidatename != null" >
        InvalidateName,
      </if>
      <if test="invalidatetime != null" >
        InvalidateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="itemcode != null" >
        #{itemcode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="plannedprice != null" >
        #{plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="specifications != null" >
        #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="measurementunit != null" >
        #{measurementunit,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="operatorid != null" >
        #{operatorid,jdbcType=INTEGER},
      </if>
      <if test="operationunitid != null" >
        #{operationunitid,jdbcType=INTEGER},
      </if>
      <if test="operationtime != null" >
        #{operationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidatejobint != null" >
        #{invalidatejobint,jdbcType=INTEGER},
      </if>
      <if test="invalidatename != null" >
        #{invalidatename,jdbcType=INTEGER},
      </if>
      <if test="invalidatetime != null" >
        #{invalidatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.logistics.model.PacPackagingExample" resultType="java.lang.Integer" >
    select count(*) from pac_packaging
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pac_packaging
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.itemcode != null" >
        ItemCode = #{record.itemcode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemname != null" >
        ItemName = #{record.itemname,jdbcType=VARCHAR},
      </if>
      <if test="record.plannedprice != null" >
        PlannedPrice = #{record.plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="record.specifications != null" >
        Specifications = #{record.specifications,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.measurementunit != null" >
        MeasurementUnit = #{record.measurementunit,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        Status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.operatorid != null" >
        OperatorID = #{record.operatorid,jdbcType=INTEGER},
      </if>
      <if test="record.operationunitid != null" >
        OperationUnitID = #{record.operationunitid,jdbcType=INTEGER},
      </if>
      <if test="record.operationtime != null" >
        OperationTime = #{record.operationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalidatejobint != null" >
        InvalidateJobInt = #{record.invalidatejobint,jdbcType=INTEGER},
      </if>
      <if test="record.invalidatename != null" >
        InvalidateName = #{record.invalidatename,jdbcType=INTEGER},
      </if>
      <if test="record.invalidatetime != null" >
        InvalidateTime = #{record.invalidatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pac_packaging
    set ID = #{record.id,jdbcType=INTEGER},
      ItemCode = #{record.itemcode,jdbcType=VARCHAR},
      ItemName = #{record.itemname,jdbcType=VARCHAR},
      PlannedPrice = #{record.plannedprice,jdbcType=DECIMAL},
      Specifications = #{record.specifications,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=BIT},
      MeasurementUnit = #{record.measurementunit,jdbcType=VARCHAR},
      Status = #{record.status,jdbcType=BIT},
      OperatorID = #{record.operatorid,jdbcType=INTEGER},
      OperationUnitID = #{record.operationunitid,jdbcType=INTEGER},
      OperationTime = #{record.operationtime,jdbcType=TIMESTAMP},
      InvalidateJobInt = #{record.invalidatejobint,jdbcType=INTEGER},
      InvalidateName = #{record.invalidatename,jdbcType=INTEGER},
      InvalidateTime = #{record.invalidatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.logistics.model.PacPackaging" >
    update pac_packaging
    <set >
      <if test="itemcode != null" >
        ItemCode = #{itemcode,jdbcType=VARCHAR},
      </if>
      <if test="itemname != null" >
        ItemName = #{itemname,jdbcType=VARCHAR},
      </if>
      <if test="plannedprice != null" >
        PlannedPrice = #{plannedprice,jdbcType=DECIMAL},
      </if>
      <if test="specifications != null" >
        Specifications = #{specifications,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="measurementunit != null" >
        MeasurementUnit = #{measurementunit,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        Status = #{status,jdbcType=BIT},
      </if>
      <if test="operatorid != null" >
        OperatorID = #{operatorid,jdbcType=INTEGER},
      </if>
      <if test="operationunitid != null" >
        OperationUnitID = #{operationunitid,jdbcType=INTEGER},
      </if>
      <if test="operationtime != null" >
        OperationTime = #{operationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidatejobint != null" >
        InvalidateJobInt = #{invalidatejobint,jdbcType=INTEGER},
      </if>
      <if test="invalidatename != null" >
        InvalidateName = #{invalidatename,jdbcType=INTEGER},
      </if>
      <if test="invalidatetime != null" >
        InvalidateTime = #{invalidatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.logistics.model.PacPackaging" >
    update pac_packaging
    set ItemCode = #{itemcode,jdbcType=VARCHAR},
      ItemName = #{itemname,jdbcType=VARCHAR},
      PlannedPrice = #{plannedprice,jdbcType=DECIMAL},
      Specifications = #{specifications,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      MeasurementUnit = #{measurementunit,jdbcType=VARCHAR},
      Status = #{status,jdbcType=BIT},
      OperatorID = #{operatorid,jdbcType=INTEGER},
      OperationUnitID = #{operationunitid,jdbcType=INTEGER},
      OperationTime = #{operationtime,jdbcType=TIMESTAMP},
      InvalidateJobInt = #{invalidatejobint,jdbcType=INTEGER},
      InvalidateName = #{invalidatename,jdbcType=INTEGER},
      InvalidateTime = #{invalidatetime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>