<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.logistics.dao.IaeTimeinputMapper" >
  <resultMap id="BaseResultMap" type="com.example.logistics.model.IaeTimeinput" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="InputType" property="inputtype" jdbcType="VARCHAR" />
    <result column="Port" property="port" jdbcType="VARCHAR" />
    <result column="Demand" property="demand" jdbcType="BIT" />
    <result column="VehicleInt" property="vehicleint" jdbcType="VARCHAR" />
    <result column="WaybillID" property="waybillid" jdbcType="VARCHAR" />
    <result column="ExpectArrivalDate" property="expectarrivaldate" jdbcType="TIMESTAMP" />
    <result column="ExpectDepartureDate" property="expectdeparturedate" jdbcType="TIMESTAMP" />
    <result column="ActualArrivalDate" property="actualarrivaldate" jdbcType="TIMESTAMP" />
    <result column="ActualDepartureDate" property="actualdeparturedate" jdbcType="TIMESTAMP" />
    <result column="Start" property="start" jdbcType="VARCHAR" />
    <result column="Carriers" property="carriers" jdbcType="INTEGER" />
    <result column="Remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="InputPerson" property="inputperson" jdbcType="INTEGER" />
    <result column="InputDate" property="inputdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, InputType, Port, Demand, VehicleInt, WaybillID, ExpectArrivalDate, ExpectDepartureDate, 
    ActualArrivalDate, ActualDepartureDate, Start, Carriers, Remarks, InputPerson, InputDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.logistics.model.IaeTimeinputExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from iae_timeinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iae_timeinput
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iae_timeinput
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.logistics.model.IaeTimeinputExample" >
    delete from iae_timeinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.logistics.model.IaeTimeinput" >
    insert into iae_timeinput (ID, InputType, Port, 
      Demand, VehicleInt, WaybillID, 
      ExpectArrivalDate, ExpectDepartureDate, 
      ActualArrivalDate, ActualDepartureDate, 
      Start, Carriers, Remarks, 
      InputPerson, InputDate)
    values (#{id,jdbcType=INTEGER}, #{inputtype,jdbcType=VARCHAR}, #{port,jdbcType=VARCHAR}, 
      #{demand,jdbcType=BIT}, #{vehicleint,jdbcType=VARCHAR}, #{waybillid,jdbcType=VARCHAR}, 
      #{expectarrivaldate,jdbcType=TIMESTAMP}, #{expectdeparturedate,jdbcType=TIMESTAMP}, 
      #{actualarrivaldate,jdbcType=TIMESTAMP}, #{actualdeparturedate,jdbcType=TIMESTAMP}, 
      #{start,jdbcType=VARCHAR}, #{carriers,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, 
      #{inputperson,jdbcType=INTEGER}, #{inputdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.logistics.model.IaeTimeinput" >
    insert into iae_timeinput
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="inputtype != null" >
        InputType,
      </if>
      <if test="port != null" >
        Port,
      </if>
      <if test="demand != null" >
        Demand,
      </if>
      <if test="vehicleint != null" >
        VehicleInt,
      </if>
      <if test="waybillid != null" >
        WaybillID,
      </if>
      <if test="expectarrivaldate != null" >
        ExpectArrivalDate,
      </if>
      <if test="expectdeparturedate != null" >
        ExpectDepartureDate,
      </if>
      <if test="actualarrivaldate != null" >
        ActualArrivalDate,
      </if>
      <if test="actualdeparturedate != null" >
        ActualDepartureDate,
      </if>
      <if test="start != null" >
        Start,
      </if>
      <if test="carriers != null" >
        Carriers,
      </if>
      <if test="remarks != null" >
        Remarks,
      </if>
      <if test="inputperson != null" >
        InputPerson,
      </if>
      <if test="inputdate != null" >
        InputDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inputtype != null" >
        #{inputtype,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=VARCHAR},
      </if>
      <if test="demand != null" >
        #{demand,jdbcType=BIT},
      </if>
      <if test="vehicleint != null" >
        #{vehicleint,jdbcType=VARCHAR},
      </if>
      <if test="waybillid != null" >
        #{waybillid,jdbcType=VARCHAR},
      </if>
      <if test="expectarrivaldate != null" >
        #{expectarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="expectdeparturedate != null" >
        #{expectdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualarrivaldate != null" >
        #{actualarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualdeparturedate != null" >
        #{actualdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null" >
        #{start,jdbcType=VARCHAR},
      </if>
      <if test="carriers != null" >
        #{carriers,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="inputperson != null" >
        #{inputperson,jdbcType=INTEGER},
      </if>
      <if test="inputdate != null" >
        #{inputdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.logistics.model.IaeTimeinputExample" resultType="java.lang.Integer" >
    select count(*) from iae_timeinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update iae_timeinput
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.inputtype != null" >
        InputType = #{record.inputtype,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null" >
        Port = #{record.port,jdbcType=VARCHAR},
      </if>
      <if test="record.demand != null" >
        Demand = #{record.demand,jdbcType=BIT},
      </if>
      <if test="record.vehicleint != null" >
        VehicleInt = #{record.vehicleint,jdbcType=VARCHAR},
      </if>
      <if test="record.waybillid != null" >
        WaybillID = #{record.waybillid,jdbcType=VARCHAR},
      </if>
      <if test="record.expectarrivaldate != null" >
        ExpectArrivalDate = #{record.expectarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expectdeparturedate != null" >
        ExpectDepartureDate = #{record.expectdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualarrivaldate != null" >
        ActualArrivalDate = #{record.actualarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actualdeparturedate != null" >
        ActualDepartureDate = #{record.actualdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.start != null" >
        Start = #{record.start,jdbcType=VARCHAR},
      </if>
      <if test="record.carriers != null" >
        Carriers = #{record.carriers,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        Remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.inputperson != null" >
        InputPerson = #{record.inputperson,jdbcType=INTEGER},
      </if>
      <if test="record.inputdate != null" >
        InputDate = #{record.inputdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update iae_timeinput
    set ID = #{record.id,jdbcType=INTEGER},
      InputType = #{record.inputtype,jdbcType=VARCHAR},
      Port = #{record.port,jdbcType=VARCHAR},
      Demand = #{record.demand,jdbcType=BIT},
      VehicleInt = #{record.vehicleint,jdbcType=VARCHAR},
      WaybillID = #{record.waybillid,jdbcType=VARCHAR},
      ExpectArrivalDate = #{record.expectarrivaldate,jdbcType=TIMESTAMP},
      ExpectDepartureDate = #{record.expectdeparturedate,jdbcType=TIMESTAMP},
      ActualArrivalDate = #{record.actualarrivaldate,jdbcType=TIMESTAMP},
      ActualDepartureDate = #{record.actualdeparturedate,jdbcType=TIMESTAMP},
      Start = #{record.start,jdbcType=VARCHAR},
      Carriers = #{record.carriers,jdbcType=INTEGER},
      Remarks = #{record.remarks,jdbcType=VARCHAR},
      InputPerson = #{record.inputperson,jdbcType=INTEGER},
      InputDate = #{record.inputdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.logistics.model.IaeTimeinput" >
    update iae_timeinput
    <set >
      <if test="inputtype != null" >
        InputType = #{inputtype,jdbcType=VARCHAR},
      </if>
      <if test="port != null" >
        Port = #{port,jdbcType=VARCHAR},
      </if>
      <if test="demand != null" >
        Demand = #{demand,jdbcType=BIT},
      </if>
      <if test="vehicleint != null" >
        VehicleInt = #{vehicleint,jdbcType=VARCHAR},
      </if>
      <if test="waybillid != null" >
        WaybillID = #{waybillid,jdbcType=VARCHAR},
      </if>
      <if test="expectarrivaldate != null" >
        ExpectArrivalDate = #{expectarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="expectdeparturedate != null" >
        ExpectDepartureDate = #{expectdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualarrivaldate != null" >
        ActualArrivalDate = #{actualarrivaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualdeparturedate != null" >
        ActualDepartureDate = #{actualdeparturedate,jdbcType=TIMESTAMP},
      </if>
      <if test="start != null" >
        Start = #{start,jdbcType=VARCHAR},
      </if>
      <if test="carriers != null" >
        Carriers = #{carriers,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        Remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="inputperson != null" >
        InputPerson = #{inputperson,jdbcType=INTEGER},
      </if>
      <if test="inputdate != null" >
        InputDate = #{inputdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.logistics.model.IaeTimeinput" >
    update iae_timeinput
    set InputType = #{inputtype,jdbcType=VARCHAR},
      Port = #{port,jdbcType=VARCHAR},
      Demand = #{demand,jdbcType=BIT},
      VehicleInt = #{vehicleint,jdbcType=VARCHAR},
      WaybillID = #{waybillid,jdbcType=VARCHAR},
      ExpectArrivalDate = #{expectarrivaldate,jdbcType=TIMESTAMP},
      ExpectDepartureDate = #{expectdeparturedate,jdbcType=TIMESTAMP},
      ActualArrivalDate = #{actualarrivaldate,jdbcType=TIMESTAMP},
      ActualDepartureDate = #{actualdeparturedate,jdbcType=TIMESTAMP},
      Start = #{start,jdbcType=VARCHAR},
      Carriers = #{carriers,jdbcType=INTEGER},
      Remarks = #{remarks,jdbcType=VARCHAR},
      InputPerson = #{inputperson,jdbcType=INTEGER},
      InputDate = #{inputdate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>